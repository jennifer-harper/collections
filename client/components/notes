import { useAppSelector, useAppDispatch } from '../hooks/redux'
import { fetchAllCollections, addNewAction } from '../actions/collectionAction'
import { useEffect, useState, ChangeEvent, FormEvent } from 'react'
import ACollection from './ACollection'
import {CollectionData} from '../../models/Collections'

function Collections() {

  const dispatch = useAppDispatch()

//look in reducers index.ts
 const collections = useAppSelector((state) => state.something) 
 console.log(collections)

const [formData, setNewCollection] = useState({} as CollectionData)
const [submitting, setSubmitting] = useState(false);


 const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {
  setNewCollection({
    ...formData,
    [e.target.id]: e.target.value,
   
  })
  console.log(formData)
}

const handleSubmit = (e: FormEvent) => {
  e.preventDefault();
  setSubmitting(true);
  
  dispatch(addNewAction(formData)).then(() => {
    setNewCollection({} as CollectionData);
    setSubmitting(false);
  })
  .catch((err) => {
    return err.message
  })
}

  useEffect(() => {
    dispatch(fetchAllCollections())
  },[dispatch, submitting])  
  

  return (
    <>
      {!submitting && collections.map((note, i) => (
        <ACollection key={i} note={note} />
      ))}

      <form onSubmit={handleSubmit}>
            <p>Add a new note</p>
            <label htmlFor="title">Title</label>
            <input
              type="text"
              id="title"
              value={formData.title}
              onChange={handleInputChange}
              required
            />

            <label htmlFor="content">Content</label>
            <input
              type="text"
              id="content"
              value={formData.content}
              onChange={handleInputChange}
              required
            />

            <label htmlFor="category">Category</label>
            <input
              type="text"
              id="category"
              value={formData.category}
              onChange={handleInputChange}
              required
            />
            <button>Submit</button>
      </form>


    </>
  )
}

export default Collections



